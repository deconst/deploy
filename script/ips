#!/usr/bin/env python

import os
import sys
import re
import subprocess

from include import utils
utils.log_warnings()

import pyrax
import yaml

# Get our bearings on the filesystem.
root = os.path.realpath(os.path.join(os.path.dirname(__file__), ".."))

# Collect credentials.
with open(os.path.join(root, "credentials.yml")) as credfile:
    creds = yaml.load(credfile)
rackspace_username = creds["rackspace_username"]
rackspace_apikey = creds["rackspace_api_key"]
rackspace_region = creds["rackspace_region"]
instance = creds["instance"]

pyrax.set_setting("identity_type", "rackspace")
pyrax.set_credentials(rackspace_username, rackspace_apikey)
cs = pyrax.connect_to_cloudservers(region=rackspace_region)

pattern = "deconst-{}".format(instance)
all_servers = cs.servers.list()

matching_servers = []
for server in all_servers:
    group = server.metadata.get('group')
    if not group or not group.startswith(pattern):
        continue

    matching_servers.append(server)

matching_servers.sort(key=lambda s: s.name)

for server in matching_servers:
    print "{} {}".format(server.name, server.accessIPv4)
