#!/bin/bash

set -ueo pipefail

ROOT=$(cd $(dirname $0)/.. && pwd)

# Read a mandatory credential from the credential file.
#
# Arguments:
# - Name of the credential to read from the YAML.
credential() {
  local SETTING=$1
  grep ${SETTING}: ${ROOT}/credentials.yml |
    sed -E -e 's/^[^:]+:[ \t]*//' |
    sed -E -e 's/[ \t]*$//'
}

[ -f ${ROOT}/credentials.yml ] || {
  cat <<EOM 1>&2
The credentials file is missing! Please set your credentials before continuing.

  cp credentials.example.yml credentials.yml
  \${EDITOR} credentials.yml

EOM
  exit 1
}

# Set localhost's ansible_python_interpreter path from the current environment.
[ -f ${ROOT}/inventory/localhost ] || {
  PYTHON=$(which python)

  cat <<EOF >${ROOT}/inventory/localhost
[local]
localhost ansible_python_interpreter=${PYTHON}
EOF
}

# Populate RAX_ environment variables from the credentials file.
export RAX_USERNAME=$(credential rackspace_username)
export RAX_API_KEY=$(credential rackspace_api_key)
export RAX_REGION=$(credential rackspace_region | tr a-z A-Z)

# Fetch roles from Galaxy if necessary.
([ -f ${ROOT}/.galaxy ] && diff ${ROOT}/.galaxy ${ROOT}/requirements.txt >/dev/null 2>&1) || {
  ansible-galaxy install --force --role-file ${ROOT}/requirements.txt

  cp requirements.txt ${ROOT}/.galaxy
  echo ">> Ansible Galaxy roles initialized."
  echo ">> \"rm ${ROOT}/.galaxy\" to force re-initialization."
}

exec ansible-playbook -i ${ROOT}/inventory ${ROOT}/site.yml $*
