---
# Distribute SSL certificates to each host.

- hosts: local
  connection: local
  gather_facts: no
  vars:
    gencerts: "{{ fresh_worker_cluster and fresh_elastic_cluster }}"
  tasks:

  - name: password file
    shell: >
      touch certificates/password &&
      chmod 600 certificates/password &&
      head -c 128 /dev/random | base64 > certificates/password
      creates=certificates/password
    when: gencerts

  - name: generate a private CA
    command: >
      docker run --rm
      --volume ${PWD}/certificates/:/certificates/
      cloudpipe/keymaster ca
      creates=certificates/ca.pem
    when: gencerts

- hosts: deconst-all
  gather_facts: no
  vars:
    gencerts: "{{ fresh_host|default(False) }}"
  tasks:

  - name: generate a host certificate
    local_action: >
      command docker run --rm
      --volume ${PWD}/certificates/:/certificates/
      cloudpipe/keymaster signed-keypair
      -n {{ inventory_hostname }}
      -h {{ ansible_eth1.ipv4.address }}
      -s IP:{{ ansible_eth1.ipv4.address }}
      -p both
      creates=certificates/{{ inventory_hostname }}-cert.pem
    when: gencerts

  - name: install the CA certificate
    copy:
      src: certificates/ca.pem
      dest: /etc/ssl/certs/deconst-ca.pem
      mode: 0644
    sudo: yes
    when: gencerts

  - name: install the host certificate
    copy:
      src: certificates/{{ inventory_hostname }}-cert.pem
      dest: /etc/ssl/private/host-cert.pem
      mode: 0644
      owner: root
      group: root
    sudo: yes
    when: gencerts

  - name: install the host private key
    copy:
      src: certificates/{{ inventory_hostname }}-key.pem
      dest: /etc/ssl/private/host-key.pem
      mode: 0644
      owner: root
      group: root
    sudo: yes
    when: gencerts
