input {
  lumberjack {
    port => 5000
    ssl_certificate => "/certificates/host-cert.pem"
    ssl_key => "/certificates/host-key.pem"
  }
}

filter {
  json {
    source => "message"
    remove_field => "_CMDLINE"
  }

  mutate {
    rename => {
      "_SYSTEMD_UNIT" => "SYSTEMD_UNIT"
      "_HOSTNAME" => "HOSTNAME"
      "_PID" => "PID"
      "message" => "JOURNALD_MESSAGE"
      "MESSAGE" => "RAW_MESSAGE"
    }
  }

  if ( [RAW_MESSAGE] =~ /^\{/ ) {
    json {
      source => "RAW_MESSAGE"
    }
  }

  if ( [SYSTEMD_UNIT] =~ /^deconst-nginx/ ) {
    grok {
      match => [ "RAW_MESSAGE", "%{IP:clientIP} %{USER:ident} %{USER:auth} \[%{HTTPDATE:nginxTimestamp}\] \"%{WORD:method} /%{NOTSPACE:requestPath} HTTP/%{NUMBER:httpVersion}\" %{NUMBER:status} " ]
    }
  }

  mutate {
    remove_field => ["JOURNALD_MESSAGE"]
  }
}

output {
  elasticsearch {
    protocol => "http"
    host => [
    {%- for elastic_host in elasticsearch_hosts -%}
      "{{ elastic_host }}:{{ elasticsearch_api_port }}"
      {%- if not loop.last %},{% endif -%}
    {%- endfor -%}
    ]
{% if elasticsearch_api_proto == "https" %}
    ssl => true
{% endif %}
    user => "{{ elasticsearch_username }}"
    password => "{{ elasticsearch_password }}"
  }
}
