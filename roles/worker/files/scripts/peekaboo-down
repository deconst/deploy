#!/bin/bash
#
# Drains connections from an about-to-be-terminated service from the load balancer.

set -eou pipefail

[ ! $# = 3 ] && {
  cat <<USAGE >&2
Usage: peekaboo-down <container> <port> <lb id>

 Drains connections from a node on a load balancer that corresponds to the first published port of a
 named Docker container.
USAGE
  exit 1
}

CONTAINER_NAME=${1:-}
CONTAINER_PORT=${2:-}
LOAD_BALANCER_ID=${3:-}

# Locate the published port to add to the load balancer.

PORT_PATH=/var/deconst/ports/${CONTAINER_NAME}.${CONTAINER_PORT}.port

[ -e ${PORT_PATH} ] || {
  echo "Port file ${PORT_PATH} does not exist."
  exit 1
}

APP_PORT=$(cat ${PORT_PATH})

[ -z ${APP_PORT} ] && {
  echo "Unable to find the application port for container ${CONTAINER_NAME}" >&2
  exit 1
}

echo "Draining ${CONTAINER_NAME}:${APP_PORT} from the load balancer ${LOAD_BALANCER_ID}."

export LOAD_BALANCER_ID=${LOAD_BALANCER_ID}
export OS_USERNAME=${RACKSPACE_USERNAME}
export OS_PASSWORD=${RACKSPACE_APIKEY}
export OS_REGION_NAME=${RACKSPACE_REGION}
export APP_PORT=${APP_PORT}

/opt/bin/peekaboo -drain

# Give connections a chance to drain.
sleep 3

echo "Deleting ${CONTAINER_NAME}:${APP_PORT} from the load balancer ${LOAD_BALANCER_ID}."
/opt/bin/peekaboo -delete

echo "Removing port file ${PORT_PATH}."
rm -f "${PORT_PATH}"
