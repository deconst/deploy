---

- name: pod name ranges
  set_fact:
    pod_names: "[{% for i in range(1, pod_count + 1) %}{{ i }}{% if not loop.last %},{% endif %}{% endfor %}]"

- name: necessary directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
  - /etc/deconst
  - /var/deconst
  - /opt/bin
  sudo: yes

- name: environment variables
  template:
    src: deconst-environment.j2
    dest: /etc/deconst/environment.sh
    owner: root
    group: root
    mode: 0600
  sudo: yes
  register: environment

- name: utility scripts
  copy:
    src: scripts/{{ item }}
    dest: /opt/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
  - peekaboo-up
  - peekaboo-down
  sudo: yes

- name: pull script
  template:
    src: pulls.sh.j2
    dest: /opt/bin/pulls.sh
    owner: root
    group: root
    mode: 0755
  sudo: yes

- name: systemd-docker binary
  get_url: dest=/opt/bin/systemd-docker url=https://github.com/ibuildthecloud/systemd-docker/releases/download/v0.2.0/systemd-docker
  sudo: yes

- name: systemd-docker is executable
  file: path=/opt/bin/systemd-docker mode=0755
  sudo: yes

- name: ensure containers are up to date
  command: /opt/bin/pulls.sh
  register: service_pulls
  failed_when: service_pulls.rc == 1
  changed_when: service_pulls.rc == 2
  tags: update

- name: show the pull result
  debug: var=service_pulls.stdout_lines

- name: unit files
  copy:
    src: services/{{ item }}@.service
    dest: /etc/systemd/system/{{ item }}@.service
    owner: root
    group: root
    mode: 0644
  with_items: services
  register: units
  sudo: yes

- name: control repository
  git:
    repo: "{{ control_repository_url }}"
    version: "{{ control_repository_branch }}"
    dest: /var/deconst/control
    force: yes
  sudo: yes
  tags: control

- name: reload unit files
  command: systemctl daemon-reload
  when: units | changed
  sudo: yes

- name: container services
  service: name={{ item[1] }}@{{ item[0] }}.service state=started enabled=true
  with_nested:
  - pod_names
  - services
  register: containers
  sudo: yes

- name: restart services
  service: name={{ item[1] }}@{{ item[0] }}.service state=restarted
  with_nested:
  - pod_names
  - services
  when: (environment|changed or service_pulls|changed or units|changed) and not (containers|changed)
  sudo: yes
