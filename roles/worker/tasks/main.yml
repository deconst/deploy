---

- name: pod name ranges
  set_fact:
    pod_names: "[{% for i in range(1, pod_count + 1) %}{{ i }}{% if not loop.last %},{% endif %}{% endfor %}]"
  tags: always

- name: service environment variables
  template:
    src: deconst-service-environment.j2
    dest: /etc/deconst/service-environment.sh
    owner: root
    group: root
    mode: 0600
  sudo: yes
  register: service_environment

- name: nginx environment variables
  template:
    src: deconst-nginx-environment.j2
    dest: /etc/deconst/nginx-environment.sh
    owner: root
    group: root
    mode: 0600
  sudo: yes
  register: nginx_environment

- name: ensure containers are up to date
  command: /opt/bin/multipull {% for image in worker_containers %}quay.io/deconst/{{ image }} {% endfor %}
  register: worker_pulls
  failed_when: worker_pulls.rc == 1
  changed_when: worker_pulls.rc == 2
  tags: update

- name: show the pull result
  debug: var=worker_pulls.stdout_lines

- name: deconst service unit files
  copy:
    src: services/{{ item }}@.service
    dest: /etc/systemd/system/{{ item }}@.service
    owner: root
    group: root
    mode: 0644
  with_items: worker_services
  register: worker_units
  sudo: yes

- name: reload unit files
  command: systemctl daemon-reload
  when: worker_units|changed
  sudo: yes

- name: container service pods
  service: name={{ item[1] }}@{{ item[0] }}.service state=started enabled=true
  with_nested:
  - pod_names
  - worker_services
  register: worker_service_results
  sudo: yes

- name: compute restart control var
  set_fact:
    service_pod_restart: >
      {{ (nginx_environment|changed or service_environment|changed or worker_pulls|changed or worker_units|changed) and not worker_service_results|changed }}
