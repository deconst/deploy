# Copy this to "env" and fill in your secrets and customization:
#
# cp env.example env
# ${EDITOR} env

# Name of the project for docker-compose
export PROJECT=deconst

# Determine the storage backend
# Use "memory" for in memory storage or "remote" for Cloud Files storage
export STORAGE=remote

# Rackspace credentials.
# These are only used for Cloud Files.

export RACKSPACE_USERNAME=
export RACKSPACE_APIKEY=
export RACKSPACE_REGION=

# Set this to something different to keep content separated in different Cloud Files containers.
# Deconst uses two: one for CDN assets and one for metadata envelopes.
export CONTAINER_NAME=integrated

export CONTENT_CONTAINER=deconst-${CONTAINER_NAME}-content
export ASSET_CONTAINER=deconst-${CONTAINER_NAME}-asset

# The content service's API Key. Used for write actions.
export ADMIN_APIKEY=

# Set this to the domain name of the final site.
export PRESENTED_URL_DOMAIN=deconst.horse

# "true" or "false", whether the presenter should load assets directly from the
# control repo, or via the assets container
export PRESENTER_DEVMODE=

# "true" or "false", whether the presenter should inject a Livereload script in
# the body. Doesn't do anything unless your templates watch this variable.
export PRESENTER_LIVERELOAD=

# Control repository settings.
# Set these to a git URL and branch to read the control repository from a git repository.
export CONTROL_REPO_URL=https://github.com/deconst/deconst-docs-control.git
export CONTENT_REPO_BRANCH=master

# A task to be run in the control repo's directory to build/upload assets
export CONTROL_REPO_ASSETS_TASK="grunt build"
